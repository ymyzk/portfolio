name: CI

on:
  push:
    branches:
      - main
  pull_request:

permissions:
  contents: read
  packages: write

jobs:
  build-app:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [24.x]
    name: Build and test the application
    steps:
      - uses: actions/checkout@v5
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v6
        with:
          node-version: ${{ matrix.node-version }}
      - run: npm ci
      - run: npm run build
      - run: npm test
      - if: ${{ matrix.node-version == '24.x' }}
        uses: actions/upload-artifact@v5
        with:
          name: portfolio
          path: out

  test-dockerfile:
    runs-on: ubuntu-latest
    name: Test Dockerfile
    steps:
      - uses: actions/checkout@v5
      - name: Run hadolint
        run: docker run --rm -i hadolint/hadolint:latest < Dockerfile

  build-docker-images:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    needs:
      - build-app
      - test-dockerfile
    permissions:
      contents: read
      packages: write
    name: Build Docker images
    steps:
      - uses: actions/checkout@v5
      - run: docker version
      - run: docker build -t portfolio .
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Push to GitHub Container Registry
        run: |
          docker tag portfolio ghcr.io/ymyzk/portfolio:$GITHUB_SHA
          docker tag portfolio ghcr.io/ymyzk/portfolio:latest
          docker push ghcr.io/ymyzk/portfolio:$GITHUB_SHA
          docker push ghcr.io/ymyzk/portfolio:latest

  upload-to-cf-pages:
    runs-on: ubuntu-latest
    needs:
      - build-app
    permissions:
      contents: read
      deployments: write
    name: Deploy to Cloudflare Pages
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v6
        with:
          name: portfolio
          path: out
      - name: Publish
        uses: cloudflare/pages-action@1
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          projectName: ymyzk-portfolio
          directory: out
          gitHubToken: ${{ secrets.GITHUB_TOKEN }}
          branch: ${{ github.ref_name }}

  dependabot:
    runs-on: ubuntu-latest
    needs:
      - upload-to-cf-pages
    permissions:
      contents: write
      pull-requests: write
    if: github.event_name == 'pull_request' && github.actor == 'dependabot[bot]'
    name: Automatically merge Dependabot PRs
    steps:
      - name: Fetch Dependabot metadata
        id: metadata
        uses: dependabot/fetch-metadata@v2
        with:
          github-token: "${{ secrets.GITHUB_TOKEN }}"
      - name: Enable auto-merge for Dependabot PRs (patch)
        if: steps.metadata.outputs.update-type == 'version-update:semver-patch'
        run: gh pr merge --auto --merge "$PR_URL"
        env:
          PR_URL: ${{ github.event.pull_request.html_url }}
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Enable auto-merge for Dependabot PRs (minor)
        if: steps.metadata.outputs.update-type == 'version-update:semver-minor'
        run: gh pr merge --auto --merge "$PR_URL"
        env:
          PR_URL: ${{ github.event.pull_request.html_url }}
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
